{"version":3,"sources":["components/button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a61a41ea.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\n\nconst button = ({ color, text, onClick }) => {\n    return (\n        <button onClick={onClick}\n                style={{ backgroundColor: color }}\n                className='btn'>\n            {text}\n        </button>\n    )    \n}\n\nbutton.defaultProps = {\n    color: 'steelblue'\n}\n\nbutton.propTypes = {\n    text: PropTypes.string, \n    color: PropTypes.string,\n    onClick: PropTypes.func,\n}\n\nexport default button\n","import PropTypes from 'prop-types'\nimport { useLocation } from 'react-router-dom'\nimport Button from './button'\n\n\nconst Header = ({ title, onAdd, showAdd }) => {\n    const location = useLocation()\n\n    return (\n        <header className='header'>\n            <h1>{title}</h1>\n            {location.pathname === '/' && (\n                <Button color={showAdd ? 'red' : 'green'}\n                    text={showAdd ? 'Close' : 'Add'}\n                    onClick={onAdd} />\n            )}\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Task Tracker',\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n\n}\n\nexport default Header;\n","import { FaTimes } from 'react-icons/fa'\n\n\nconst Task = ({ task, onDelete, onToggle }) => {\n    return (\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\n            <h3>{ task.text } <FaTimes style={{ \n                    color: 'red',\n                    cursor: 'pointer' }}\n                    onClick={() => onDelete(task.id)} />\n            </h3>\n            <p>{ task.day }</p>\n            \n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n    \n    return (\n        <>\n         {tasks.map((task) => (\n            <Task key={task.id}\n                  task={task}\n                  onDelete={onDelete}\n                  onToggle={onToggle}\n            />\n         ))}   \n        </>\n    )\n}\n\nexport default Tasks\n","import { useState } from 'react'\n\nconst AddTask = ({ onAdd }) => {\n    const [text, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if(!text) {\n            alert('Please add a task')\n            return \n        }\n\n        onAdd({ text, day, reminder })\n\n        setText('')\n        setDay('')\n        setReminder(false)\n    }\n\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input type='text' placeholder='Add Task' value={text} onChange={(e) => setText(e.target.value)} />\n            </div>\n            <div className='form-control'>\n                <label>Day & Time</label>\n                <input type='text' placeholder='Add Day & Time' value={day} onChange={(e) => setDay(e.target.value)} />\n            </div>\n            <div className='form-control form-control-check'>\n                <label>Set Reminder</label>\n                <input type='checkbox' checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)} />\n            </div>\n\n            <input type='submit' value='Save Task'  className='btn btn-block' />\n        </form>\n    )\n}\n\nexport default AddTask\n\n","import { Link } from 'react-router-dom'\n\nconst Footer = () => {\n    return (\n        <footer>\n            <p>Copyright &copy; 2021</p>\n            <Link to=\"/about\"> About </Link>\n        </footer>\n    )\n}\n\nexport default Footer\n","import { Link } from 'react-router-dom'\n\nconst About = () => {\n    return (\n        <div>\n            <h4>Version 1.0.0</h4>\n            <Link to='/'> Go Back </Link>            \n        </div>\n    )\n}\n\nexport default About\n","import { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport Footer from './components/Footer'\nimport About from './components/About'\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n\n\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n  //Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n\n    return data\n  }\n\n  //Fetch Task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n\n    return data\n  }\n\n\n  // Add Task\n  const addTask = async (task) => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n\n    const data = await res.json()\n\n    setTasks([...tasks, data])\n\n    // const id = Math.floor(Math.random() * 10000) + 1\n    // const newTask = { id, ...task }\n    // setTasks([...tasks, newTask])\n  }\n\n  // Delete Task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    })\n\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  //Toggle Reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id)\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n    \n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT', \n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updTask)\n    })\n\n    const data = await res.json()\n    \n    setTasks(\n      tasks.map((task) =>\n       task.id === id ?\n        {...task, reminder: data.reminder} : task))\n  }\n\n  return (\n    <Router>\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\n      <Route path='/' exact render={ (props) => (\n        <>\n        {showAddTask && <AddTask onAdd={addTask} />}\n        {tasks.length > 0 ? (\n          <Tasks tasks={tasks} \n               onDelete={deleteTask}\n               onToggle={toggleReminder}\n        /> \n        ) : ('No Tasks to show')}\n        \n\n        </>\n      )} /> \n      <Route path='/about' component={About} />\n      <Footer />\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}